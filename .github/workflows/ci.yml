name: Continuous Integration

on:
  push:
    branches:
      - "**"
    tags:
      - "v*.*.*"
  pull_request:
    branches:
      - "**"

jobs:
  calculate-version:
    name: Calculate Version
    runs-on: ubuntu-latest
    outputs:
      semVer: ${{ steps.gitversion.outputs.semVer }}
      assemblySemVer: ${{ steps.gitversion.outputs.assemblySemVer }}

    steps:
      - uses: actions/checkout@v4.1.7
        with:
          fetch-depth: 0

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v1.2.0
        with:
          versionSpec: "5.x"

      - name: Determine Version
        id: gitversion
        uses: gittools/actions/gitversion/execute@v1.2.0
        with:
          useConfigFile: true
          configFilePath: ./.github/version.yml

  build:
    runs-on: ubuntu-latest
    needs: calculate-version
    env:
      SEMVER: ${{ needs.calculate-version.outputs.semVer }}
      ASSEMBLYSEMVER: ${{ needs.calculate-version.outputs.assemblySemVer }}

    steps:
      - uses: actions/checkout@v4.1.7

      - name: Restore dependencies
        run: dotnet restore src/LiveMap.sln

      - name: Build the solution
        run: dotnet build -c Release -o build/slm/server /p:Version=${{env.ASSEMBLYSEMVER}} src/LiveMap.sln 

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          version: 9.5.0
          run_install: false

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'
          cache-dependency-path: 'src/web/pnpm-lock.yaml'

      
      - name: Install dependencies
        run: pnpm install
        working-directory: src/web
      
      - name: Build web
        run: pnpm run build
        working-directory: src/web

      - name: Copy web files to build dir
        run: mkdir build/slm/wwwroot && cp -a src/web/dist/. build/slm/wwwroot

      - name: Copy assets to build dir
        run: unzip -o assets/assets.zip -d build/slm/wwwroot/

      - name: Copy config files to build dir
        run: cp -a config/. build/slm/

      - name: Attach Zip as build artifact
        uses: actions/upload-artifact@v4
        with:
          name: SimpleLiveMap-${{ env.SEMVER }}
          path: build